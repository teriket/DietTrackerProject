7/25/2024
--For an early prototype I simply appended FoodItemPanels to the end of a JPanel.  While this worked in displaying information, I realized that JPanels are not easily iterated over in their contents. This would be important for calculating the cumulative nutrients because the FoodItemPanel class contains the cumulative nutrients, and they would have to look back at the previous frame to see the cumulative nutrients in that frame.  To fix this issue, I cached a reference to every FoodItemPanel in a list called foodItemsEatenList.  Now a frame wanting



7/27/2024
--FoodItemPanel was violating the single-responsibility principle by both storing data, performing calculations, and being a UI element.  While not causing issues at this time, it could cause scalability issues in the future.  Refactored the code so that FoodItemPanel is solely responsible for displaying elements, following a model-view-presenter pattern.  The FoodEaten class now acts as a presenter to pass information from Food to FoodItemPanel.

--The Window class was also taking on too much responsibility of managing the main window and its inner components.  It's now seperated into the Window class, whose sole responsibility is managing the outer window, and the WindowManager class, who manages the innards of the window.



